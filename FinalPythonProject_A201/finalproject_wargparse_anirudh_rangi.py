# -*- coding: utf-8 -*-
"""FinalProject_Anirudh_Rangi.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BUnsNYIWFylKps8RNH9G13NgyU9v-MEg

## Final Project : A Python Program to Display Calendar


The function takes in month_start, year_start, month_end, year_end and returns
the range of calendar for the following

Example:
```
print_calendar_in_range(11, 2023, 2, 2024)

November 2023
Mo Tu We Th Fr Sa Su
       1  2  3  4  5
 6  7  8  9 10 11 12
13 14 15 16 17 18 19
20 21 22 23 24 25 26
27 28 29 30

   December 2023
Mo Tu We Th Fr Sa Su
             1  2  3
 4  5  6  7  8  9 10
11 12 13 14 15 16 17
18 19 20 21 22 23 24
25 26 27 28 29 30 31

    January 2024
Mo Tu We Th Fr Sa Su
 1  2  3  4  5  6  7
 8  9 10 11 12 13 14
15 16 17 18 19 20 21
22 23 24 25 26 27 28
29 30 31

   February 2024
Mo Tu We Th Fr Sa Su
          1  2  3  4
 5  6  7  8  9 10 11
12 13 14 15 16 17 18
19 20 21 22 23 24 25
26 27 28 29
```
"""

#importing module
import argparse
import calendar

def print_calendar_in_range(month_start, year_start, month_end, year_end):
    """
    This function returns the calendar for the range of the parameters provided

    Args: int: month_start, year_start, month_end, year_end

    returns: calendar for the parameters provided
    """
    # Iterate through each month-year combination in the specified range
    for year in range(year_start, year_end + 1):
        if year == year_start:
          start_month = month_start
        else:
          start_month = 1

        if year == year_end:
           end_month = month_end
        else:
           end_month = 12
        for month in range(start_month, end_month + 1):
            print(calendar.month(year, month),'\n')



if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="This program returns the calendar for the parameters provided.")
    parser.add_argument("-ms", "--month_start", type=int, required=True, help="Start month (1-12)")
    parser.add_argument("-ys", "--year_start", type=int, required=True, help="Start year")
    parser.add_argument("-me", "--month_end", type=int, required=True, help="End month (1-12)")
    parser.add_argument("-ye", "--year_end", type=int, required=True, help="End year")
    
    args = parser.parse_args()
    
    month_start = args.month_start
    month_end = args.month_end
    year_start = args.year_start
    year_end = args.year_end
    
    # Check for valid month range (1 to 12)
    if not (1 <= month_start <= 12 and 1 <= month_end <= 12):
        print("Error: Months must be in the range 1-12")
        exit(1)
    
    print_calendar_in_range(month_start, year_start, month_end, year_end)

    
                                     